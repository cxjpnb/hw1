close?all;clc;?
I=imread('lena.bmp');%导入图像“lena.bmp”
figure(1)?imshow(I);?
title('image?of?8?bits');%显示k=8的原图像
[x,y]=size(I);%读取图像“lena.bmp”的长宽?
img7=zeros(x,y);%产生一个名为img7的512X512的0矩阵?img6=zeros(x,y);
img5=zeros(x,y);?img4=zeros(x,y);?img3=zeros(x,y);?img2=zeros(x,y);?img1=zeros(x,y);
for?i=1:x?for?j=1:y?
????????img7(i,j)=floor(I(i,j)/2);%将原图像的每个像素的灰度级除以2，并用函数floor进行下取整
end?end?figure(2)?
imshow((img7),[0,127]);?title('image?of?7?bits');?for?i=1:x?for?j=1:y
img6(i,j)=floor(img7(i,j)/2);%将原图像的每个像素的灰度级除以2，并用函数floor进行下取整
end?end?figure(3)?
imshow((img6),[0,63]);?title('image?of?6?bits');?for?i=1:x?for?j=1:y
img5(i,j)=floor(img6(i,j)/2);%将原图像的每个像素的灰度级除以2，并用函数floor进行下取整
end?end?figure(4)?
imshow((img5),[0,31]);?title('image?of?5?bits');?for?i=1:x?for?j=1:y
img4(i,j)=floor(img5(i,j)/2);%将原图像的每个像素的灰度级除以2，并用函数floor进行下取整
end?end?figure(5)?
imshow((img4),[0,15]);?title('image?of?4?bits');?for?i=1:x?for?j=1:y
img3(i,j)=floor(img4(i,j)/2);%将原图像的每个像素的灰度级除以2，并用函数floor进行下取整
end?end?figure(6)?
imshow((img3),[0,7]);?title('image?of?3?bits');?for?i=1:x?for?j=1:y
img2(i,j)=floor(img3(i,j)/2);%将原图像的每个像素的灰度级除以2，并用函数floor进行下取整
end?end?figure(7)?
imshow((img2),[0,3]);?title('image?of?2?bits');?for?i=1:x?for?j=1:y
img1(i,j)=floor(img2(i,j)/2);%将原图像的每个像素的灰度级除以2，并用函数floor进行下取整
end?end?figure(8)?
imshow((img1),[0,1]);?title('image?of?1?bits');



close all;
clc;
I=imread('lena.bmp');
m=mean2(I)
d2=std2(I)





a=imread('lena.bmp');
 figure(1);
 imshow(a); 
 title('ystx');
 b1=imresize(a,[2048 2048],'nearest');
 figure(2);
 imshow(b1);
 title('zjlczf');
 b2=imresize(a,[2048 2048],'bilinear');
 figure(3);
 imshow(b2);
 title('sxxczf');
 b3=imresize(a,[2048 2048],'bicubic');
 figure(4); 
 imshow(b3);
 title('sscczf');





Lena的水平源代码：
transformtype='affine'; 
transformmatrix=[1 1.5 0;0 1 0;0 0 1]; 
T=maketform(transformtype,transformmatrix);
I=imread('lena.bmp');
nI=imtransform(I,T);
figure(1); 
imshow(I);
title('ystx');
b1=imresize(nI,[2048 2048],'nearest');
subplot(1,3,1);
imshow(b1);
title('sppyzjlnc');
b2=imresize(nI,[2048 2048],'bilinear'); 
subplot(1,3,2);
imshow(b2); 
title('sppysxxnc'); 
b3=imresize(nI,[2048 2048],'bicubic'); 
subplot(1,3,3);
imshow(b3);
title('sppysscnc');




Elain的水平源代码：
transformtype='affine';
transformmatrix=[1 1.5 0;0 1 0;0 0 1]; 
T=maketform(transformtype,transformmatrix); 
I=imread('elain1.bmp'); 
nI=imtransform(I,T); 
figure(5);
imshow(I); 
title('ystx');
b1=imresize(nI,[2048 2048],'nearest');
subplot(1,3,1);
imshow(b1); 
title('sppyzjlnc');
b2=imresize(nI,[2048 2048],'bilinear');
subplot(1,3,2); 
imshow(b2);
title('sppysxxnc'); 
b3=imresize(nI,[2048 2048],'bicubic');
subplot(1,3,3); 
imshow(b3);
title('sppysscnc');




Lena 的旋转源代码：
I=imread('lena.bmp');
figure(1);
imshow(I);
title('ystx');
I1=imrotate(I,30,'nearest');
b1=imresize(I1,[2048 2048],'nearest');
subplot(1,3,1);
imshow(b1);
title(' 30 zjlnc');
I2=imrotate(I,30,'bilinear');
b2=imresize(I2,[2048 2048],'bilinear');
subplot(1,3,2);
imshow(b2); 
title(' 30 sxxnc'); 
L3=imrotate(I,30,'bicubic');
b3=imresize(L3,[2048 2048],'bicubic');
subplot(1,3,3);
imshow(b3);
title(' 30 sscnc');





Elain 的旋转源代码：
L=imread('elain1.bmp'); 
figure(5);
imshow(L); 
title('ystx');
L1=imrotate(L,30,'nearest');
c1=imresize(L1,[2048 2048],'nearest');
subplot(1,3,1);
imshow(c1); 
title(' 30 zjlnc');
L2=imrotate(L,30,'bilinear');
c2=imresize(L2,[2048 2048],'bilinear');
subplot(1,3,2); 
imshow(c2);
title(' 30 sxxnc'); 
L3=imrotate(L,30,'bicubic');
c3=imresize(L3,[2048 2048],'bicubic');
subplot(1,3,3);
imshow(c3);
title(' 30 sscnc');
